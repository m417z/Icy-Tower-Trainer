#include "atof_binary.h"

DWORD dwPowerTable1[] = {
	0x00000000, 0x00000000, 0x4002A000, 0x00000000, 
	0x00000000, 0x4005C800, 0x00000000, 0x00000000, 
	0x4008FA00, 0x00000000, 0x00000000, 0x400C9C40, 
	0x00000000, 0x00000000, 0x400FC350, 0x00000000, 
	0x00000000, 0x4012F424, 0x00000000, 0x80000000, 
	0x40169896, 0x00000000, 0x20000000, 0x4019BEBC, 
	0x00000000, 0xC9BF0400, 0x40348E1B, 0xA1000000, 
	0x1BCECCED, 0x404ED3C2, 0xB59EF020, 0xADA82B70, 
	0x40699DC5, 0x25FD5DD0, 0x4F8E1AE5, 0x4083EB19, 
	0x95D79671, 0x8D050E43, 0x409EAF29, 0x44A0BFF9, 
	0x8F1281ED, 0x40B98281, 0xA6D53CBF, 0x1F49FFCF, 
	0x40D3C278, 0x8CE0C66F, 0x47C980E9, 0x41A893BA, 
	0x556B85BC, 0xF78D3927, 0x427CE070, 0xDE8EDDBC, 
	0xEBFB9DF9, 0x4351AA7E, 0xE376E6A1, 0x2F29F2CC, 
	0x44268184, 0xAA171028, 0xE310AEF8, 0x44FAC4C5, 
	0xF3D4A7EB, 0x4AE1EBF7, 0x45CF957A, 0x91C7CC65, 
	0xA0AEA60E, 0x46A3E319, 0x0C17650D, 0x75868175, 
	0x4D48C976, 0xA7E44258, 0x353B3993, 0x53EDB2B8, 
	0x5DE5A74D, 0x3B5DC53D, 0x5A929E8B, 0xF0A65DFF, 
	0x54C020A1, 0x61378CA5, 0x5A8BFDD1, 0x5D25D88B, 
	0x67DBF989, 0xF3F895AA, 0xC8A2BF27, 0x6E80DD5D, 
	0x979BC94C, 0x52028A20, 0x7525C460
};
DWORD dwPowerTable2[] = {
	0xCCCDCCCD, 0xCCCCCCCC, 0x3FFBCCCC, 0xD70A3D71, 
	0x0A3D70A3, 0x3FF8A3D7, 0xDF3B645A, 0x6E978D4F, 
	0x3FF58312, 0x652CD3C3, 0x1758E219, 0x3FF1D1B7, 
	0x84230FD0, 0xAC471B47, 0x3FEEA7C5, 0x69B6A640, 
	0xBD05AF6C, 0x3FEB8637, 0x42BC3D33, 0x94D5E57A, 
	0x3FE7D6BF, 0xCEFDFDC2, 0x77118461, 0x3FE4ABCC, 
	0xE15B4C2F, 0x94BEC44D, 0x3FC9E695, 0x3B53C492, 
	0x14CD4475, 0x3FAF9ABE, 0x94BA67DE, 0x1EAD4539, 
	0x3F94CFB1, 0xE2C62324, 0x313BBABC, 0x3F7A8B61, 
	0xC1595561, 0x7C53B17E, 0x3F5FBB12, 0x8D2FEED7, 
	0x8592BE06, 0x3F44FB15, 0xE9A53F24, 0xEA27A539, 
	0x3F2AA87F, 0xE4A1AC7D, 0x467C64BC, 0x3E55DDD0, 
	0xCC067B63, 0x83775423, 0x3D8191FF, 0x193AFA91, 
	0x4325637A, 0x3CACC031, 0x38D18921, 0xB8974782, 
	0x3BD7FD00, 0x085888DC, 0xE3E8B11B, 0x3B03A686, 
	0x424584C6, 0x7599B607, 0x3A2EDB37, 0xD21C7133, 
	0xEE32DB23, 0x395A9049, 0xC0BE87A6, 0x82A5DA57, 
	0x32B5A2A6, 0x11B268E2, 0x449F52A7, 0x2C10B759, 
	0x2DE44925, 0x534F3436, 0x256BCEAE, 0xA404598F, 
	0x7DC2DEC0, 0x1EC6E8FB, 0x5A88E79E, 0xBF3C9157, 
	0x18228350, 0x62654B4E, 0xAF8F83FD, 0x117D9406, 
	0x9FDE2DE4, 0x04C8D2CE, 0x0AD8A6DD
};
DWORD dwFunc2Values[] = {
	0x00000400, 0xFFFFFC01, 0x00000035, 0x0000000B, 
	0x00000040, 0x000003FF
};

BOOL atof_binary(LPSTR lpAscii, DWORD dwDouble[], char delimiter)
{
	DWORD dwData[3];
	char *ss;
	int ret;

	ret = func1(dwData, &ss, lpAscii, 0, 0, 0, 0, (DWORD)delimiter);
	if(ret & 4)
		return FALSE;

	func2(dwData, dwDouble);

	return TRUE;
}

int __declspec(naked) __cdecl func1(DWORD dwData[], char **ss, char *s, int d, int e, int f, int g, DWORD dwDelimiter)
{
	// returns 1, 2 on overflow, 4 on error, 0 when all is fine

	static DWORD dwSwitchTable[12];

	__asm
	{
		mov eax, offset dwSwitchTable
		mov DWORD PTR [eax], offset _project_004027B3
		mov DWORD PTR [eax+0x04], offset _project_00402807
		mov DWORD PTR [eax+0x08], offset _project_0040285D
		mov DWORD PTR [eax+0x0C], offset _project_00402890
		mov DWORD PTR [eax+0x10], offset _project_004028D5
		mov DWORD PTR [eax+0x14], offset _project_0040290D
		mov DWORD PTR [eax+0x18], offset _project_00402921
		mov DWORD PTR [eax+0x1C], offset _project_0040297C
		mov DWORD PTR [eax+0x20], offset _project_00402967
		mov DWORD PTR [eax+0x24], offset _project_004029E6
		mov DWORD PTR [eax+0x28], offset _project_004029DB
		mov DWORD PTR [eax+0x2C], offset _project_0040298A
	}

	__asm
	{
	MOV EDI,EDI
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,0x7C
	MOV EAX,DWORD PTR [EBP+8]
	PUSH EBX
	XOR EBX,EBX
	PUSH ESI
	XOR ESI,ESI
	MOV DWORD PTR [EBP-0x78],EAX
	MOV EAX,DWORD PTR [EBP+0xC]
	INC ESI
	XOR ECX,ECX
	PUSH EDI
	MOV DWORD PTR [EBP-0x70],EAX
	LEA EDI,DWORD PTR [EBP-0x20]
	MOV DWORD PTR [EBP-0x74],EBX
	MOV DWORD PTR [EBP-0x68],ESI
	MOV DWORD PTR [EBP-0x4C],EBX
	MOV DWORD PTR [EBP-0x58],EBX
	MOV DWORD PTR [EBP-0x5C],EBX
	MOV DWORD PTR [EBP-0x60],EBX
	MOV DWORD PTR [EBP-0x64],EBX
	MOV DWORD PTR [EBP-0x50],EBX
	MOV DWORD PTR [EBP-0x6C],EBX
	MOV EDX,DWORD PTR [EBP+0x10]
	MOV DWORD PTR [EBP-0x54],EDX

_project_00402789:
	MOV AL,BYTE PTR [EDX]
	CMP AL,0x20
	JE _project_0040279B
	CMP AL,9
	JE _project_0040279B
	CMP AL,0xA
	JE _project_0040279B
	CMP AL,0xD
	JNZ _project_0040279E

_project_0040279B:
	INC EDX
	JMP _project_00402789

_project_0040279E:
	MOV BL,0x30

_project_004027A0:
	MOV AL,BYTE PTR [EDX]
	INC EDX
	CMP ECX,0xB
	JA _project_004029DB
	JMP DWORD PTR [ECX*4+dwSwitchTable] // USING A VARIABLE HERE

_project_004027B3:
	MOV CL,AL
	SUB CL,0x31
	CMP CL,8
	JA _project_004027C3

_project_004027BD:
	PUSH 3

_project_004027BF:
	POP ECX
	DEC EDX
	JMP _project_004027A0

_project_004027C3:
	MOV ECX,DWORD PTR [EBP+0x24]
	CMP AL,CL
	JNZ _project_004027D9

_project_004027D4:
	PUSH 5

_project_004027D6:
	POP ECX
	JMP _project_004027A0

_project_004027D9:
	MOVSX EAX,AL
	SUB EAX,0x2B
	JE _project_004027FE
	DEC EAX
	DEC EAX
	JE _project_004027F2
	SUB EAX,3
	JNZ _project_00402979

_project_004027EE:
	MOV ECX,ESI
	JMP _project_004027A0

_project_004027F2:
	PUSH 2
	POP ECX
	MOV DWORD PTR [EBP-0x74],0x8000
	JMP _project_004027A0

_project_004027FE:
	AND DWORD PTR [EBP-0x74],0
	PUSH 2
	POP ECX
	JMP _project_004027A0

_project_00402807:
	MOV CL,AL
	SUB CL,0x31
	MOV DWORD PTR [EBP-0x58],ESI
	CMP CL,8
	JBE _project_004027BD
	MOV ECX,DWORD PTR [EBP+0x24]
	CMP AL,CL
	JNZ _project_00402829

_project_00402825:
	PUSH 4
	JMP _project_004027D6

_project_00402829:
	CMP AL,0x2B
	JE _project_00402855
	CMP AL,0x2D
	JE _project_00402855
	CMP AL,BL
	JE _project_004027EE

_project_00402835:
	CMP AL,0x43
	JLE _project_00402979
	CMP AL,0x45
	JLE _project_00402851
	CMP AL,0x63
	JLE _project_00402979
	CMP AL,0x65
	JG _project_00402979

_project_00402851:
	PUSH 6
	JMP _project_004027D6

_project_00402855:
	DEC EDX
	PUSH 0xB
	JMP _project_004027D6

_project_0040285D:
	MOV CL,AL
	SUB CL,0x31
	CMP CL,8
	JBE _project_004027BD
	MOV ECX,DWORD PTR [EBP+0x24]
	CMP AL,CL
	JE _project_004027D4
	CMP AL,BL
	JE _project_004027EE

_project_00402888:
	MOV EDX,DWORD PTR [EBP-0x54]
	JMP _project_004029A4

_project_00402890:
	MOV DWORD PTR [EBP-0x58],ESI
	JMP _project_004028AF

_project_00402895:
	CMP AL,0x39
	JG _project_004028B3
	CMP DWORD PTR [EBP-0x4C],0x19
	JNB _project_004028A9
	INC DWORD PTR [EBP-0x4C]
	SUB AL,BL
	MOV BYTE PTR [EDI],AL
	INC EDI
	JMP _project_004028AC

_project_004028A9:
	INC DWORD PTR [EBP-0x50]

_project_004028AC:
	MOV AL,BYTE PTR [EDX]
	INC EDX

_project_004028AF:
	CMP AL,BL
	JGE _project_00402895

_project_004028B3:
	MOV ECX,DWORD PTR [EBP+0x24]
	CMP AL,CL
	JE _project_00402825

_project_004028C8:
	CMP AL,0x2B
	JE _project_00402855
	CMP AL,0x2D
	JE _project_00402855
	JMP _project_00402835

_project_004028D5:
	CMP DWORD PTR [EBP-0x4C],0
	MOV DWORD PTR [EBP-0x58],ESI
	MOV DWORD PTR [EBP-0x5C],ESI
	JNZ _project_00402907
	JMP _project_004028E9

_project_004028E3:
	DEC DWORD PTR [EBP-0x50]
	MOV AL,BYTE PTR [EDX]
	INC EDX

_project_004028E9:
	CMP AL,BL
	JE _project_004028E3
	JMP _project_00402907

_project_004028EF:
	CMP AL,0x39
	JG _project_004028C8
	CMP DWORD PTR [EBP-0x4C],0x19
	JNB _project_00402904
	INC DWORD PTR [EBP-0x4C]
	SUB AL,BL
	MOV BYTE PTR [EDI],AL
	INC EDI
	DEC DWORD PTR [EBP-0x50]

_project_00402904:
	MOV AL,BYTE PTR [EDX]
	INC EDX

_project_00402907:
	CMP AL,BL
	JGE _project_004028EF
	JMP _project_004028C8

_project_0040290D:
	SUB AL,BL
	MOV DWORD PTR [EBP-0x5C],ESI
	CMP AL,9
	JA _project_00402888
	PUSH 4
	JMP _project_004027BF

_project_00402921:
	LEA ECX,DWORD PTR [EDX-2]
	MOV DWORD PTR [EBP-0x54],ECX
	MOV CL,AL
	SUB CL,0x31
	CMP CL,8
	JA _project_00402938

_project_00402931:
	PUSH 9
	JMP _project_004027BF

_project_00402938:
	MOVSX EAX,AL
	SUB EAX,0x2B
	JE _project_00402960
	DEC EAX
	DEC EAX
	JE _project_00402954
	SUB EAX,3

_project_00402947:
	JNZ _project_00402888
	PUSH 8
	JMP _project_004027D6

_project_00402954:
	OR DWORD PTR [EBP-0x68],0xFFFFFFFF
	PUSH 7
	POP ECX
	JMP _project_004027A0

_project_00402960:
	PUSH 7
	JMP _project_004027D6

_project_00402967:
	MOV DWORD PTR [EBP-0x60],ESI
	JMP _project_0040296F

_project_0040296C:
	MOV AL,BYTE PTR [EDX]
	INC EDX

_project_0040296F:
	CMP AL,BL
	JE _project_0040296C
	SUB AL,0x31
	CMP AL,8
	JBE _project_00402931

_project_00402979:
	DEC EDX
	JMP _project_004029A4

_project_0040297C:
	MOV CL,AL
	SUB CL,0x31
	CMP CL,8
	JBE _project_00402931
	CMP AL,BL
	JMP _project_00402947

_project_0040298A:
	CMP DWORD PTR [EBP+0x20],0
	JE _project_004029D7
	MOVSX EAX,AL
	SUB EAX,0x2B
	LEA ECX,DWORD PTR [EDX-1]
	MOV DWORD PTR [EBP-0x54],ECX
	JE _project_00402960
	DEC EAX
	DEC EAX
	JE _project_00402954
	MOV EDX,ECX

_project_004029A4:
	CMP DWORD PTR [EBP-0x58],0
	MOV EAX,DWORD PTR [EBP-0x70]
	MOV DWORD PTR [EAX],EDX
	JE _project_00402D8C
	PUSH 0x18
	POP EAX
	CMP DWORD PTR [EBP-0x4C],EAX
	JBE _project_004029CB
	CMP BYTE PTR [EBP-9],5
	JL _project_004029C4
	INC BYTE PTR [EBP-9]

_project_004029C4:
	DEC EDI
	INC DWORD PTR [EBP-0x50]
	MOV DWORD PTR [EBP-0x4C],EAX

_project_004029CB:
	CMP DWORD PTR [EBP-0x4C],0
	JBE _project_00402DB3
	JMP _project_00402A30

_project_004029D7:
	PUSH 0xA
	POP ECX
	DEC EDX

_project_004029DB:
	CMP ECX,0xA
	JNZ _project_004027A0
	JMP _project_004029A4

_project_004029E6:
	MOV DWORD PTR [EBP-0x60],ESI
	XOR ECX,ECX
	JMP _project_00402A06

_project_004029ED:
	CMP AL,0x39
	JG _project_00402A11
	IMUL ECX,ECX,0xA
	MOVSX ESI,AL
	LEA ECX,DWORD PTR [ECX+ESI-0x30]
	CMP ECX,0x1450
	JG _project_00402A0C
	MOV AL,BYTE PTR [EDX]
	INC EDX

_project_00402A06:
	CMP AL,BL
	JGE _project_004029ED
	JMP _project_00402A11

_project_00402A0C:
	MOV ECX,0x1451

_project_00402A11:
	MOV DWORD PTR [EBP-0x64],ECX
	JMP _project_00402A21

_project_00402A16:
	CMP AL,0x39
	JG _project_00402979
	MOV AL,BYTE PTR [EDX]
	INC EDX

_project_00402A21:
	CMP AL,BL
	JGE _project_00402A16
	JMP _project_00402979

_project_00402A2A:
	DEC DWORD PTR [EBP-0x4C]
	INC DWORD PTR [EBP-0x50]

_project_00402A30:
	DEC EDI
	CMP BYTE PTR [EDI],0
	JE _project_00402A2A
	LEA EAX,DWORD PTR [EBP-0x3C]
	PUSH EAX
	PUSH DWORD PTR [EBP-0x4C]
	LEA EAX,DWORD PTR [EBP-0x20]
	PUSH EAX
	CALL func1_helper // USING A VARIABLE HERE
	MOV EAX,DWORD PTR [EBP-0x64]
	XOR EDX,EDX
	ADD ESP,0xC
	CMP DWORD PTR [EBP-0x68],EDX
	JGE _project_00402A55
	NEG EAX

_project_00402A55:
	ADD EAX,DWORD PTR [EBP-0x50]
	CMP DWORD PTR [EBP-0x60],EDX
	JNZ _project_00402A60
	ADD EAX,DWORD PTR [EBP+0x18]

_project_00402A60:
	CMP DWORD PTR [EBP-0x5C],EDX
	JNZ _project_00402A68
	SUB EAX,DWORD PTR [EBP+0x1C]

_project_00402A68:
	CMP EAX,0x1450
	JG _project_00402D95
	CMP EAX,-0x1450
	JL _project_00402DAC
	MOV ECX,offset dwPowerTable1 // USING A VARIABLE HERE
	SUB ECX,0x60
	MOV DWORD PTR [EBP-0x54],EAX
	CMP EAX,EDX
	JE _project_00402D7A
	JGE _project_00402AA0
	NEG EAX
	MOV ECX,offset dwPowerTable2 // USING A VARIABLE HERE
	MOV DWORD PTR [EBP-0x54],EAX
	SUB ECX,0x60

_project_00402AA0:
	CMP DWORD PTR [EBP+0x14],EDX
	JNZ _project_00402AAB
	XOR EAX,EAX
	MOV WORD PTR [EBP-0x3C],AX

_project_00402AAB:
	CMP DWORD PTR [EBP-0x54],EDX
	JE _project_00402D7A
	JMP _project_00402ABB

_project_00402AB6:
	MOV ECX,DWORD PTR [EBP-0x7C]
	XOR EDX,EDX

_project_00402ABB:
	MOV EAX,DWORD PTR [EBP-0x54]
	SAR DWORD PTR [EBP-0x54],3
	ADD ECX,0x54
	AND EAX,7
	MOV DWORD PTR [EBP-0x7C],ECX
	CMP EAX,EDX
	JE _project_00402D70
	IMUL EAX,EAX,0xC
	ADD EAX,ECX
	MOV EBX,EAX
	MOV EAX,0x8000
	CMP WORD PTR [EBX],AX
	JB _project_00402AF2
	MOV ESI,EBX
	LEA EDI,DWORD PTR [EBP-0x48]
	MOVS DWORD PTR ES:[EDI],DWORD PTR [ESI]
	MOVS DWORD PTR ES:[EDI],DWORD PTR [ESI]
	MOVS DWORD PTR ES:[EDI],DWORD PTR [ESI]
	DEC DWORD PTR [EBP-0x46]
	LEA EBX,DWORD PTR [EBP-0x48]

_project_00402AF2:
	MOVZX ECX,WORD PTR [EBX+0xA]
	XOR EAX,EAX
	MOV DWORD PTR [EBP-0x50],EAX
	MOV DWORD PTR [EBP-0x2C],EAX
	MOV DWORD PTR [EBP-0x28],EAX
	MOV DWORD PTR [EBP-0x24],EAX
	MOV EAX,DWORD PTR [EBP-0x32]
	MOV ESI,ECX
	MOV EDX,0x7FFF
	XOR ESI,EAX
	AND EAX,EDX
	AND ECX,EDX
	AND ESI,0x8000
	MOV EDI,0x7FFF
	LEA EDX,DWORD PTR [ECX+EAX]
	MOV DWORD PTR [EBP-0x70],ESI
	MOVZX EDX,DX
	CMP AX,DI
	JNB _project_00402D52
	CMP CX,DI
	JNB _project_00402D52
	MOV EDI,0xBFFD
	CMP DX,DI
	JA _project_00402D52
	MOV ESI,0x3FBF
	CMP DX,SI
	JA _project_00402B5F
	XOR EAX,EAX
	MOV DWORD PTR [EBP-0x38],EAX
	MOV DWORD PTR [EBP-0x3C],EAX
	JMP _project_00402D6D

_project_00402B5F:
	XOR ESI,ESI
	CMP AX,SI
	JNZ _project_00402B85
	INC EDX
	TEST DWORD PTR [EBP-0x34],0x7FFFFFFF
	JNZ _project_00402B85
	CMP DWORD PTR [EBP-0x38],ESI
	JNZ _project_00402B85
	CMP DWORD PTR [EBP-0x3C],ESI
	JNZ _project_00402B85
	XOR EAX,EAX
	MOV WORD PTR [EBP-0x32],AX
	JMP _project_00402D70

_project_00402B85:
	CMP CX,SI
	JNZ _project_00402BAB
	INC EDX
	TEST DWORD PTR [EBX+8],0x7FFFFFFF
	JNZ _project_00402BAB
	CMP DWORD PTR [EBX+4],ESI
	JNZ _project_00402BAB
	CMP DWORD PTR [EBX],ESI
	JNZ _project_00402BAB
	MOV DWORD PTR [EBP-0x34],ESI
	MOV DWORD PTR [EBP-0x38],ESI
	MOV DWORD PTR [EBP-0x3C],ESI
	JMP _project_00402D70

_project_00402BAB:
	MOV DWORD PTR [EBP-0x68],ESI
	LEA EDI,DWORD PTR [EBP-0x28]
	MOV DWORD PTR [EBP-0x58],5

_project_00402BB8:
	MOV EAX,DWORD PTR [EBP-0x68]
	MOV ECX,DWORD PTR [EBP-0x58]
	ADD EAX,EAX
	MOV DWORD PTR [EBP-0x64],ECX
	TEST ECX,ECX
	JLE _project_00402C19
	LEA EAX,DWORD PTR [EBP+EAX-0x3C]
	MOV DWORD PTR [EBP-0x5C],EAX
	LEA EAX,DWORD PTR [EBX+8]
	MOV DWORD PTR [EBP-0x60],EAX

_project_00402BD4:
	MOV EAX,DWORD PTR [EBP-0x60]
	MOV ECX,DWORD PTR [EBP-0x5C]
	MOVZX ECX,WORD PTR [ECX]
	MOVZX EAX,WORD PTR [EAX]
	AND DWORD PTR [EBP-0x4C],0
	IMUL EAX,ECX
	MOV ECX,DWORD PTR [EDI-4]
	LEA ESI,DWORD PTR [ECX+EAX]
	CMP ESI,ECX
	JB _project_00402BF5
	CMP ESI,EAX
	JNB _project_00402BFC

_project_00402BF5:
	MOV DWORD PTR [EBP-0x4C],1

_project_00402BFC:
	CMP DWORD PTR [EBP-0x4C],0
	MOV DWORD PTR [EDI-4],ESI
	JE _project_00402C08
	INC WORD PTR [EDI]

_project_00402C08:
	ADD DWORD PTR [EBP-0x5C],2
	SUB DWORD PTR [EBP-0x60],2
	DEC DWORD PTR [EBP-0x64]
	CMP DWORD PTR [EBP-0x64],0
	JG _project_00402BD4

_project_00402C19:
	INC EDI
	INC EDI
	INC DWORD PTR [EBP-0x68]
	DEC DWORD PTR [EBP-0x58]
	CMP DWORD PTR [EBP-0x58],0
	JG _project_00402BB8
	ADD EDX,0xC002
	TEST DX,DX
	JLE _project_00402C69

_project_00402C32:
	MOV EDI,DWORD PTR [EBP-0x24]
	TEST EDI,EDI
	JS _project_00402C64
	MOV ESI,DWORD PTR [EBP-0x28]
	MOV EAX,DWORD PTR [EBP-0x2C]
	SHL DWORD PTR [EBP-0x2C],1
	SHR EAX,0x1F
	MOV ECX,ESI
	ADD ESI,ESI
	OR ESI,EAX
	SHR ECX,0x1F
	LEA EAX,DWORD PTR [EDI+EDI]
	OR EAX,ECX
	ADD EDX,0xFFFF
	MOV DWORD PTR [EBP-0x28],ESI
	MOV DWORD PTR [EBP-0x24],EAX
	TEST DX,DX
	JG _project_00402C32

_project_00402C64:
	TEST DX,DX
	JG _project_00402CB6

_project_00402C69:
	ADD EDX,0xFFFF
	TEST DX,DX
	JGE _project_00402CB6
	MOV EAX,EDX
	NEG EAX
	MOVZX ESI,AX
	ADD EDX,ESI

_project_00402C7D:
	TEST BYTE PTR [EBP-0x2C],1
	JE _project_00402C86
	INC DWORD PTR [EBP-0x50]

_project_00402C86:
	MOV EAX,DWORD PTR [EBP-0x24]
	MOV EDI,DWORD PTR [EBP-0x28]
	MOV ECX,DWORD PTR [EBP-0x28]
	SHR DWORD PTR [EBP-0x24],1
	SHL EAX,0x1F
	SHR EDI,1
	OR EDI,EAX
	MOV EAX,DWORD PTR [EBP-0x2C]
	SHL ECX,0x1F
	SHR EAX,1
	OR EAX,ECX
	DEC ESI
	MOV DWORD PTR [EBP-0x28],EDI
	MOV DWORD PTR [EBP-0x2C],EAX
	JNZ _project_00402C7D
	CMP DWORD PTR [EBP-0x50],ESI
	JE _project_00402CB6
	OR WORD PTR [EBP-0x2C],1

_project_00402CB6:
	MOV EAX,0x8000
	MOV ECX,EAX
	CMP WORD PTR [EBP-0x2C],CX
	JA _project_00402CD4
	MOV ECX,DWORD PTR [EBP-0x2C]
	AND ECX,0x1FFFF
	CMP ECX,0x18000
	JNZ _project_00402D08

_project_00402CD4:
	CMP DWORD PTR [EBP-0x2A],-1
	JNZ _project_00402D05
	AND DWORD PTR [EBP-0x2A],0
	CMP DWORD PTR [EBP-0x26],-1
	JNZ _project_00402D00
	AND DWORD PTR [EBP-0x26],0
	MOV ECX,0xFFFF
	CMP WORD PTR [EBP-0x22],CX
	JNZ _project_00402CFA
	MOV WORD PTR [EBP-0x22],AX
	INC EDX
	JMP _project_00402D08

_project_00402CFA:
	INC WORD PTR [EBP-0x22]
	JMP _project_00402D08

_project_00402D00:
	INC DWORD PTR [EBP-0x26]
	JMP _project_00402D08

_project_00402D05:
	INC DWORD PTR [EBP-0x2A]

_project_00402D08:
	MOV EAX,0x7FFF
	CMP DX,AX
	JB _project_00402D35
	XOR EAX,EAX
	XOR ECX,ECX
	CMP WORD PTR [EBP-0x70],AX
	MOV DWORD PTR [EBP-0x38],EAX
	SETE CL
	MOV DWORD PTR [EBP-0x3C],EAX
	DEC ECX
	AND ECX,0x80000000
	ADD ECX,0x7FFF8000
	MOV DWORD PTR [EBP-0x34],ECX
	JMP _project_00402D70

_project_00402D35:
	MOV AX,WORD PTR [EBP-0x2A]
	OR EDX,DWORD PTR [EBP-0x70]
	MOV WORD PTR [EBP-0x3C],AX
	MOV EAX,DWORD PTR [EBP-0x28]
	MOV DWORD PTR [EBP-0x3A],EAX
	MOV EAX,DWORD PTR [EBP-0x24]
	MOV DWORD PTR [EBP-0x36],EAX
	MOV WORD PTR [EBP-0x32],DX
	JMP _project_00402D70

_project_00402D52:
	XOR EAX,EAX
	TEST SI,SI
	SETE AL
	AND DWORD PTR [EBP-0x38],0
	DEC EAX
	AND EAX,0x80000000
	ADD EAX,0x7FFF8000
	AND DWORD PTR [EBP-0x3C],0

_project_00402D6D:
	MOV DWORD PTR [EBP-0x34],EAX

_project_00402D70:
	CMP DWORD PTR [EBP-0x54],0
	JNZ _project_00402AB6

_project_00402D7A:
	MOV EAX,DWORD PTR [EBP-0x34]
	MOVZX ECX,WORD PTR [EBP-0x3C]
	MOV ESI,DWORD PTR [EBP-0x3A]
	MOV EDX,DWORD PTR [EBP-0x36]
	SHR EAX,0x10
	JMP _project_00402DBB

_project_00402D8C:
	MOV DWORD PTR [EBP-0x6C],4
	JMP _project_00402DB3

_project_00402D95:
	XOR ESI,ESI
	MOV EAX,0x7FFF
	MOV EDX,0x80000000
	XOR ECX,ECX
	MOV DWORD PTR [EBP-0x6C],2
	JMP _project_00402DBB

_project_00402DAC:
	MOV DWORD PTR [EBP-0x6C],1

_project_00402DB3:
	XOR ECX,ECX
	XOR EAX,EAX
	XOR EDX,EDX
	XOR ESI,ESI

_project_00402DBB:
	MOV EDI,DWORD PTR [EBP-0x78]
	OR EAX,DWORD PTR [EBP-0x74]
	MOV WORD PTR [EDI],CX
	MOV WORD PTR [EDI+0xA],AX
	MOV EAX,DWORD PTR [EBP-0x6C]
	MOV DWORD PTR [EDI+2],ESI
	MOV DWORD PTR [EDI+6],EDX
	POP EDI
	POP ESI
	POP EBX
	LEAVE
	RETN
	}
}

void __declspec(naked) __cdecl func1_helper(int a, int b, int c)
{
	__asm
	{
	MOV EDI,EDI
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,0x18
	MOV EAX,DWORD PTR [EBP+0x10]
	PUSH EBX
	PUSH ESI
	XOR ESI,ESI
	PUSH EDI
	MOV DWORD PTR [EBP-0x18],0x404E
	MOV DWORD PTR [EAX],ESI
	MOV DWORD PTR [EAX+4],ESI
	MOV DWORD PTR [EAX+8],ESI
	CMP DWORD PTR [EBP+0xC],ESI
	JBE _project_0040691E

_project_004067D8:
	MOV EDX,DWORD PTR [EAX]
	MOV EBX,DWORD PTR [EAX+4]
	MOV ESI,EAX
	LEA EDI,DWORD PTR [EBP-0x10]
	MOVS DWORD PTR ES:[EDI],DWORD PTR [ESI]
	MOVS DWORD PTR ES:[EDI],DWORD PTR [ESI]
	MOVS DWORD PTR ES:[EDI],DWORD PTR [ESI]
	MOV ECX,EDX
	SHR ECX,0x1F
	LEA EDI,DWORD PTR [EDX+EDX]
	LEA EDX,DWORD PTR [EBX+EBX]
	OR EDX,ECX
	MOV ECX,DWORD PTR [EAX+8]
	MOV ESI,EBX
	SHR ESI,0x1F
	ADD ECX,ECX
	OR ECX,ESI
	MOV DWORD PTR [EBP-0x14],EDI
	MOV ESI,EDI
	AND DWORD PTR [EBP-0x14],0
	MOV EBX,EDX
	SHR EBX,0x1F
	ADD ECX,ECX
	SHR EDI,0x1F
	OR ECX,EBX
	MOV EBX,DWORD PTR [EBP-0x10]
	ADD ESI,ESI
	ADD EDX,EDX
	OR EDX,EDI
	LEA EDI,DWORD PTR [ESI+EBX]
	MOV DWORD PTR [EAX],ESI
	MOV DWORD PTR [EAX+4],EDX
	MOV DWORD PTR [EAX+8],ECX
	CMP EDI,ESI
	JB _project_0040682F
	CMP EDI,EBX
	JNB _project_00406836

_project_0040682F:
	MOV DWORD PTR [EBP-0x14],1

_project_00406836:
	XOR EBX,EBX
	MOV DWORD PTR [EAX],EDI
	CMP DWORD PTR [EBP-0x14],EBX
	JE _project_00406859
	LEA ESI,DWORD PTR [EDX+1]
	CMP ESI,EDX
	JB _project_0040684B
	CMP ESI,1
	JNB _project_0040684E

_project_0040684B:
	XOR EBX,EBX
	INC EBX

_project_0040684E:
	MOV DWORD PTR [EAX+4],ESI
	TEST EBX,EBX
	JE _project_00406859
	INC ECX
	MOV DWORD PTR [EAX+8],ECX

_project_00406859:
	MOV ECX,DWORD PTR [EAX+4]
	MOV EDX,DWORD PTR [EBP-0xC]
	LEA EBX,DWORD PTR [ECX+EDX]
	XOR ESI,ESI
	CMP EBX,ECX
	JB _project_0040686C
	CMP EBX,EDX
	JNB _project_0040686F

_project_0040686C:
	XOR ESI,ESI
	INC ESI

_project_0040686F:
	MOV DWORD PTR [EAX+4],EBX
	TEST ESI,ESI
	JE _project_00406879
	INC DWORD PTR [EAX+8]

_project_00406879:
	MOV ECX,DWORD PTR [EBP-8]
	ADD DWORD PTR [EAX+8],ECX
	AND DWORD PTR [EBP-0x14],0
	LEA ECX,DWORD PTR [EDI+EDI]
	MOV EDX,EDI
	SHR EDX,0x1F
	LEA EDI,DWORD PTR [EBX+EBX]
	OR EDI,EDX
	MOV EDX,DWORD PTR [EAX+8]
	MOV ESI,EBX
	SHR ESI,0x1F
	LEA EBX,DWORD PTR [EDX+EDX]
	MOV EDX,DWORD PTR [EBP+8]
	OR EBX,ESI
	MOV DWORD PTR [EAX],ECX
	MOV DWORD PTR [EAX+4],EDI
	MOV DWORD PTR [EAX+8],EBX
	MOVSX EDX,BYTE PTR [EDX]
	LEA ESI,DWORD PTR [ECX+EDX]
	MOV DWORD PTR [EBP-0x10],EDX
	CMP ESI,ECX
	JB _project_004068B9
	CMP ESI,EDX
	JNB _project_004068C0

_project_004068B9:
	MOV DWORD PTR [EBP-0x14],1

_project_004068C0:
	CMP DWORD PTR [EBP-0x14],0
	MOV DWORD PTR [EAX],ESI
	JE _project_004068E4
	LEA ECX,DWORD PTR [EDI+1]
	XOR EDX,EDX
	CMP ECX,EDI
	JB _project_004068D6
	CMP ECX,1
	JNB _project_004068D9

_project_004068D6:
	XOR EDX,EDX
	INC EDX

_project_004068D9:
	MOV DWORD PTR [EAX+4],ECX
	TEST EDX,EDX
	JE _project_004068E4
	INC EBX
	MOV DWORD PTR [EAX+8],EBX

_project_004068E4:
	DEC DWORD PTR [EBP+0xC]
	INC DWORD PTR [EBP+8]
	CMP DWORD PTR [EBP+0xC],0
	JA _project_004067D8
	XOR ESI,ESI
	JMP _project_0040691E

_project_004068F8:
	MOV ECX,DWORD PTR [EAX+4]
	MOV EDX,ECX
	SHR EDX,0x10
	MOV DWORD PTR [EAX+8],EDX
	MOV EDX,DWORD PTR [EAX]
	MOV EDI,EDX
	SHL ECX,0x10
	SHR EDI,0x10
	OR ECX,EDI
	SHL EDX,0x10
	ADD DWORD PTR [EBP-0x18],0xFFF0
	MOV DWORD PTR [EAX+4],ECX
	MOV DWORD PTR [EAX],EDX

_project_0040691E:
	CMP DWORD PTR [EAX+8],ESI
	JE _project_004068F8
	MOV EBX,0x8000
	TEST DWORD PTR [EAX+8],EBX
	JNZ _project_0040695D

_project_0040692D:
	MOV ESI,DWORD PTR [EAX]
	MOV EDI,DWORD PTR [EAX+4]
	ADD DWORD PTR [EBP-0x18],0xFFFF
	MOV ECX,ESI
	ADD ESI,ESI
	SHR ECX,0x1F
	MOV DWORD PTR [EAX],ESI
	LEA ESI,DWORD PTR [EDI+EDI]
	OR ESI,ECX
	MOV ECX,DWORD PTR [EAX+8]
	MOV EDX,EDI
	SHR EDX,0x1F
	ADD ECX,ECX
	OR ECX,EDX
	MOV DWORD PTR [EAX+4],ESI
	MOV DWORD PTR [EAX+8],ECX
	TEST EBX,ECX
	JE _project_0040692D

_project_0040695D:
	MOV CX,WORD PTR [EBP-0x18]
	MOV WORD PTR [EAX+0xA],CX
	POP EDI
	POP ESI
	POP EBX
	LEAVE
	RETN
	}
}

int __declspec(naked) __cdecl func2(DWORD dwData[], DWORD dwDouble[])
{
	// returns 1, 2 on overflow, 0 when all is fine

	__asm
	{
	MOV EDI,EDI
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,0x2C
	MOV EAX,DWORD PTR [EBP+8]
	MOVZX ECX,WORD PTR [EAX+0xA]
	PUSH EBX
	MOV EBX,ECX
	AND ECX,0x8000
	MOV DWORD PTR [EBP-0x14],ECX
	MOV ECX,DWORD PTR [EAX+6]
	MOV DWORD PTR [EBP-0x20],ECX
	MOV ECX,DWORD PTR [EAX+2]
	MOVZX EAX,WORD PTR [EAX]
	AND EBX,0x7FFF
	SUB EBX,0x3FFF
	SHL EAX,0x10
	PUSH EDI
	MOV DWORD PTR [EBP-0x1C],ECX
	MOV DWORD PTR [EBP-0x18],EAX
	CMP EBX,-0x3FFF
	JNZ _project_004051BC
	XOR EBX,EBX
	XOR EAX,EAX

_project_00405199:
	CMP DWORD PTR [EBP+EAX*4-0x20],EBX
	JNZ _project_004051AC
	INC EAX
	CMP EAX,3
	JL _project_00405199
	XOR EAX,EAX
	JMP _project_00405651

_project_004051AC:
	XOR EAX,EAX
	LEA EDI,DWORD PTR [EBP-0x20]
	STOS DWORD PTR ES:[EDI]
	STOS DWORD PTR ES:[EDI]
	PUSH 2
	STOS DWORD PTR ES:[EDI]
	POP EAX
	JMP _project_00405651

_project_004051BC:
	AND DWORD PTR [EBP+8],0
	PUSH ESI
	LEA ESI,DWORD PTR [EBP-0x20]
	LEA EDI,DWORD PTR [EBP-0x2C]
	MOVS DWORD PTR ES:[EDI],DWORD PTR [ESI]
	MOVS DWORD PTR ES:[EDI],DWORD PTR [ESI]
	MOVS DWORD PTR ES:[EDI],DWORD PTR [ESI]
	MOV ESI,DWORD PTR [dwFunc2Values+8] // USING A VARIABLE HERE
	DEC ESI
	LEA ECX,DWORD PTR [ESI+1]
	MOV EAX,ECX
	CDQ
	AND EDX,0x1F
	ADD EAX,EDX
	SAR EAX,5
	MOV EDX,ECX
	AND EDX,0x8000001F
	MOV DWORD PTR [EBP-0x10],EBX
	MOV DWORD PTR [EBP-0xC],EAX
	JNS _project_004051F4
	DEC EDX
	OR EDX,0xFFFFFFE0
	INC EDX

_project_004051F4:
	LEA EDI,DWORD PTR [EBP+EAX*4-0x20]
	PUSH 0x1F
	XOR EAX,EAX
	POP ECX
	SUB ECX,EDX
	INC EAX
	SHL EAX,CL
	MOV DWORD PTR [EBP-8],ECX
	TEST DWORD PTR [EDI],EAX
	JE _project_0040529A
	MOV EAX,DWORD PTR [EBP-0xC]
	OR EDX,0xFFFFFFFF
	SHL EDX,CL
	NOT EDX
	TEST DWORD PTR [EBP+EAX*4-0x20],EDX
	JMP _project_00405222

_project_0040521D:
	CMP DWORD PTR [EBP+EAX*4-0x20],0

_project_00405222:
	JNZ _project_0040522C
	INC EAX
	CMP EAX,3
	JL _project_0040521D
	JMP _project_0040529A

_project_0040522C:
	MOV EAX,ESI
	CDQ
	PUSH 0x1F
	POP ECX
	AND EDX,ECX
	ADD EAX,EDX
	SAR EAX,5
	AND ESI,0x8000001F
	JNS _project_00405246
	DEC ESI
	OR ESI,0xFFFFFFE0
	INC ESI

_project_00405246:
	AND DWORD PTR [EBP-4],0
	SUB ECX,ESI
	XOR EDX,EDX
	INC EDX
	SHL EDX,CL
	LEA ECX,DWORD PTR [EBP+EAX*4-0x20]
	MOV ESI,DWORD PTR [ECX]
	ADD ESI,EDX
	MOV DWORD PTR [EBP+8],ESI
	MOV ESI,DWORD PTR [ECX]
	CMP DWORD PTR [EBP+8],ESI
	JB _project_00405285
	CMP DWORD PTR [EBP+8],EDX
	JMP _project_00405283

_project_00405268:
	TEST ECX,ECX
	JE _project_00405297
	AND DWORD PTR [EBP-4],0
	LEA ECX,DWORD PTR [EBP+EAX*4-0x20]
	MOV EDX,DWORD PTR [ECX]
	LEA ESI,DWORD PTR [EDX+1]
	MOV DWORD PTR [EBP+8],ESI
	CMP ESI,EDX
	JB _project_00405285
	CMP ESI,1

_project_00405283:
	JNB _project_0040528C

_project_00405285:
	MOV DWORD PTR [EBP-4],1

_project_0040528C:
	DEC EAX
	MOV EDX,DWORD PTR [EBP+8]
	MOV DWORD PTR [ECX],EDX
	MOV ECX,DWORD PTR [EBP-4]
	JNS _project_00405268

_project_00405297:
	MOV DWORD PTR [EBP+8],ECX

_project_0040529A:
	MOV ECX,DWORD PTR [EBP-8]
	OR EAX,0xFFFFFFFF
	SHL EAX,CL
	AND DWORD PTR [EDI],EAX
	MOV EAX,DWORD PTR [EBP-0xC]
	INC EAX
	CMP EAX,3
	JGE _project_004052BA
	PUSH 3
	POP ECX
	LEA EDI,DWORD PTR [EBP+EAX*4-0x20]
	SUB ECX,EAX
	XOR EAX,EAX
	REP STOS DWORD PTR ES:[EDI]

_project_004052BA:
	CMP DWORD PTR [EBP+8],0
	JE _project_004052C1
	INC EBX

_project_004052C1:
	MOV EAX,DWORD PTR [dwFunc2Values+4] // USING A VARIABLE HERE
	MOV ECX,EAX
	SUB ECX,DWORD PTR [dwFunc2Values+8] // USING A VARIABLE HERE
	CMP EBX,ECX
	JGE _project_004052DF
	XOR EAX,EAX
	LEA EDI,DWORD PTR [EBP-0x20]
	STOS DWORD PTR ES:[EDI]
	STOS DWORD PTR ES:[EDI]
	STOS DWORD PTR ES:[EDI]
	JMP _project_004054EC

_project_004052DF:
	CMP EBX,EAX
	JG _project_004054F6
	SUB EAX,DWORD PTR [EBP-0x10]
	LEA ESI,DWORD PTR [EBP-0x2C]
	MOV ECX,EAX
	LEA EDI,DWORD PTR [EBP-0x20]
	MOVS DWORD PTR ES:[EDI],DWORD PTR [ESI]
	CDQ
	AND EDX,0x1F
	ADD EAX,EDX
	MOVS DWORD PTR ES:[EDI],DWORD PTR [ESI]
	MOV EDX,ECX
	SAR EAX,5
	AND EDX,0x8000001F
	MOVS DWORD PTR ES:[EDI],DWORD PTR [ESI]
	JNS _project_0040530D
	DEC EDX
	OR EDX,0xFFFFFFE0
	INC EDX

_project_0040530D:
	AND DWORD PTR [EBP-0xC],0
	AND DWORD PTR [EBP+8],0
	OR EDI,0xFFFFFFFF
	MOV ECX,EDX
	SHL EDI,CL
	MOV DWORD PTR [EBP-4],0x20
	SUB DWORD PTR [EBP-4],EDX
	NOT EDI

_project_00405328:
	MOV EBX,DWORD PTR [EBP+8]
	LEA EBX,DWORD PTR [EBP+EBX*4-0x20]
	MOV ESI,DWORD PTR [EBX]
	MOV ECX,ESI
	AND ECX,EDI
	MOV DWORD PTR [EBP-0x10],ECX
	MOV ECX,EDX
	SHR ESI,CL
	MOV ECX,DWORD PTR [EBP-4]
	OR ESI,DWORD PTR [EBP-0xC]
	MOV DWORD PTR [EBX],ESI
	MOV ESI,DWORD PTR [EBP-0x10]
	SHL ESI,CL
	INC DWORD PTR [EBP+8]
	CMP DWORD PTR [EBP+8],3
	MOV DWORD PTR [EBP-0xC],ESI
	JL _project_00405328
	MOV ESI,EAX
	PUSH 2
	SHL ESI,2
	LEA ECX,DWORD PTR [EBP-0x18]
	POP EDX
	SUB ECX,ESI

_project_00405362:
	CMP EDX,EAX
	JL _project_0040536E
	MOV ESI,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+EDX*4-0x20],ESI
	JMP _project_00405373

_project_0040536E:
	AND DWORD PTR [EBP+EDX*4-0x20],0

_project_00405373:
	DEC EDX
	SUB ECX,4
	TEST EDX,EDX
	JGE _project_00405362
	MOV ESI,DWORD PTR [dwFunc2Values+8] // USING A VARIABLE HERE
	DEC ESI
	LEA ECX,DWORD PTR [ESI+1]
	MOV EAX,ECX
	CDQ
	AND EDX,0x1F
	ADD EAX,EDX
	SAR EAX,5
	MOV EDX,ECX
	AND EDX,0x8000001F
	MOV DWORD PTR [EBP-0xC],EAX
	JNS _project_004053A2
	DEC EDX
	OR EDX,0xFFFFFFE0
	INC EDX

_project_004053A2:
	PUSH 0x1F
	POP ECX
	SUB ECX,EDX
	XOR EDX,EDX
	INC EDX
	SHL EDX,CL
	LEA EBX,DWORD PTR [EBP+EAX*4-0x20]
	MOV DWORD PTR [EBP-0x10],ECX
	TEST DWORD PTR [EBX],EDX
	JE _project_0040543D
	OR EDX,0xFFFFFFFF
	SHL EDX,CL
	NOT EDX
	TEST DWORD PTR [EBP+EAX*4-0x20],EDX
	JMP _project_004053CD

_project_004053C8:
	CMP DWORD PTR [EBP+EAX*4-0x20],0

_project_004053CD:
	JNZ _project_004053D7
	INC EAX
	CMP EAX,3
	JL _project_004053C8
	JMP _project_0040543D

_project_004053D7:
	MOV EAX,ESI
	CDQ
	PUSH 0x1F
	POP ECX
	AND EDX,ECX
	ADD EAX,EDX
	SAR EAX,5
	AND ESI,0x8000001F
	JNS _project_004053F1
	DEC ESI
	OR ESI,0xFFFFFFE0
	INC ESI

_project_004053F1:
	AND DWORD PTR [EBP+8],0
	XOR EDX,EDX
	SUB ECX,ESI
	INC EDX
	SHL EDX,CL
	LEA ECX,DWORD PTR [EBP+EAX*4-0x20]
	MOV ESI,DWORD PTR [ECX]
	LEA EDI,DWORD PTR [ESI+EDX]
	CMP EDI,ESI
	JB _project_0040540D
	CMP EDI,EDX
	JNB _project_00405414

_project_0040540D:
	MOV DWORD PTR [EBP+8],1

_project_00405414:
	MOV DWORD PTR [ECX],EDI
	MOV ECX,DWORD PTR [EBP+8]
	JMP _project_0040543A

_project_0040541B:
	TEST ECX,ECX
	JE _project_0040543D
	LEA ECX,DWORD PTR [EBP+EAX*4-0x20]
	MOV EDX,DWORD PTR [ECX]
	LEA ESI,DWORD PTR [EDX+1]
	XOR EDI,EDI
	CMP ESI,EDX
	JB _project_00405433
	CMP ESI,1
	JNB _project_00405436

_project_00405433:
	XOR EDI,EDI
	INC EDI

_project_00405436:
	MOV DWORD PTR [ECX],ESI
	MOV ECX,EDI

_project_0040543A:
	DEC EAX
	JNS _project_0040541B

_project_0040543D:
	MOV ECX,DWORD PTR [EBP-0x10]
	OR EAX,0xFFFFFFFF
	SHL EAX,CL
	AND DWORD PTR [EBX],EAX
	MOV EAX,DWORD PTR [EBP-0xC]
	INC EAX
	CMP EAX,3
	JGE _project_0040545D
	PUSH 3
	POP ECX
	LEA EDI,DWORD PTR [EBP+EAX*4-0x20]
	SUB ECX,EAX
	XOR EAX,EAX
	REP STOS DWORD PTR ES:[EDI]

_project_0040545D:
	MOV ECX,DWORD PTR [dwFunc2Values+0xC] // USING A VARIABLE HERE
	INC ECX
	MOV EAX,ECX
	CDQ
	AND EDX,0x1F
	ADD EAX,EDX
	MOV EDX,ECX
	SAR EAX,5
	AND EDX,0x8000001F
	JNS _project_0040547E
	DEC EDX
	OR EDX,0xFFFFFFE0
	INC EDX

_project_0040547E:
	AND DWORD PTR [EBP-0xC],0
	AND DWORD PTR [EBP+8],0
	OR EDI,0xFFFFFFFF
	MOV ECX,EDX
	SHL EDI,CL
	MOV DWORD PTR [EBP-4],0x20
	SUB DWORD PTR [EBP-4],EDX
	NOT EDI

_project_00405499:
	MOV EBX,DWORD PTR [EBP+8]
	LEA EBX,DWORD PTR [EBP+EBX*4-0x20]
	MOV ESI,DWORD PTR [EBX]
	MOV ECX,ESI
	AND ECX,EDI
	MOV DWORD PTR [EBP-0x10],ECX
	MOV ECX,EDX
	SHR ESI,CL
	MOV ECX,DWORD PTR [EBP-4]
	OR ESI,DWORD PTR [EBP-0xC]
	MOV DWORD PTR [EBX],ESI
	MOV ESI,DWORD PTR [EBP-0x10]
	SHL ESI,CL
	INC DWORD PTR [EBP+8]
	CMP DWORD PTR [EBP+8],3
	MOV DWORD PTR [EBP-0xC],ESI
	JL _project_00405499
	MOV ESI,EAX
	PUSH 2
	SHL ESI,2
	LEA ECX,DWORD PTR [EBP-0x18]
	POP EDX
	SUB ECX,ESI

_project_004054D3:
	CMP EDX,EAX
	JL _project_004054DF
	MOV ESI,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+EDX*4-0x20],ESI
	JMP _project_004054E4

_project_004054DF:
	AND DWORD PTR [EBP+EDX*4-0x20],0

_project_004054E4:
	DEC EDX
	SUB ECX,4
	TEST EDX,EDX
	JGE _project_004054D3

_project_004054EC:
	PUSH 2
	XOR EBX,EBX
	POP EAX
	JMP _project_00405650

_project_004054F6:
	CMP EBX,DWORD PTR [dwFunc2Values] // USING A VARIABLE HERE
	MOV ECX,DWORD PTR [dwFunc2Values+0xC] // USING A VARIABLE HERE
	JL _project_004055B5
	XOR EAX,EAX
	LEA EDI,DWORD PTR [EBP-0x20]
	STOS DWORD PTR ES:[EDI]
	STOS DWORD PTR ES:[EDI]
	STOS DWORD PTR ES:[EDI]
	OR DWORD PTR [EBP-0x20],0x80000000
	MOV EAX,ECX
	CDQ
	AND EDX,0x1F
	ADD EAX,EDX
	MOV EDX,ECX
	SAR EAX,5
	AND EDX,0x8000001F
	JNS _project_00405531
	DEC EDX
	OR EDX,0xFFFFFFE0
	INC EDX

_project_00405531:
	AND DWORD PTR [EBP-0xC],0
	AND DWORD PTR [EBP+8],0
	OR EDI,0xFFFFFFFF
	MOV ECX,EDX
	SHL EDI,CL
	MOV DWORD PTR [EBP-4],0x20
	SUB DWORD PTR [EBP-4],EDX
	NOT EDI

_project_0040554C:
	MOV EBX,DWORD PTR [EBP+8]
	LEA EBX,DWORD PTR [EBP+EBX*4-0x20]
	MOV ESI,DWORD PTR [EBX]
	MOV ECX,ESI
	AND ECX,EDI
	MOV DWORD PTR [EBP-0x10],ECX
	MOV ECX,EDX
	SHR ESI,CL
	MOV ECX,DWORD PTR [EBP-4]
	OR ESI,DWORD PTR [EBP-0xC]
	MOV DWORD PTR [EBX],ESI
	MOV ESI,DWORD PTR [EBP-0x10]
	SHL ESI,CL
	INC DWORD PTR [EBP+8]
	CMP DWORD PTR [EBP+8],3
	MOV DWORD PTR [EBP-0xC],ESI
	JL _project_0040554C
	MOV ESI,EAX
	PUSH 2
	SHL ESI,2
	LEA ECX,DWORD PTR [EBP-0x18]
	POP EDX
	SUB ECX,ESI

_project_00405586:
	CMP EDX,EAX
	JL _project_00405592
	MOV ESI,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+EDX*4-0x20],ESI
	JMP _project_00405597

_project_00405592:
	AND DWORD PTR [EBP+EDX*4-0x20],0

_project_00405597:
	DEC EDX
	SUB ECX,4
	TEST EDX,EDX
	JGE _project_00405586
	MOV EAX,DWORD PTR [dwFunc2Values] // USING A VARIABLE HERE
	MOV ECX,DWORD PTR [dwFunc2Values+0x14] // USING A VARIABLE HERE
	LEA EBX,DWORD PTR [ECX+EAX]
	XOR EAX,EAX
	INC EAX
	JMP _project_00405650

_project_004055B5:
	MOV EAX,DWORD PTR [dwFunc2Values+0x14]
	AND DWORD PTR [EBP-0x20],0x7FFFFFFF
	ADD EBX,EAX
	MOV EAX,ECX
	CDQ
	AND EDX,0x1F
	ADD EAX,EDX
	MOV EDX,ECX
	SAR EAX,5
	AND EDX,0x8000001F
	JNS _project_004055DD
	DEC EDX
	OR EDX,0xFFFFFFE0
	INC EDX

_project_004055DD:
	AND DWORD PTR [EBP-0xC],0
	AND DWORD PTR [EBP+8],0
	OR ESI,0xFFFFFFFF
	MOV ECX,EDX
	SHL ESI,CL
	MOV DWORD PTR [EBP-4],0x20
	SUB DWORD PTR [EBP-4],EDX
	NOT ESI

_project_004055F8:
	MOV ECX,DWORD PTR [EBP+8]
	MOV EDI,DWORD PTR [EBP+ECX*4-0x20]
	MOV ECX,EDI
	AND ECX,ESI
	MOV DWORD PTR [EBP-0x10],ECX
	MOV ECX,EDX
	SHR EDI,CL
	MOV ECX,DWORD PTR [EBP+8]
	OR EDI,DWORD PTR [EBP-0xC]
	MOV DWORD PTR [EBP+ECX*4-0x20],EDI
	MOV EDI,DWORD PTR [EBP-0x10]
	MOV ECX,DWORD PTR [EBP-4]
	SHL EDI,CL
	INC DWORD PTR [EBP+8]
	CMP DWORD PTR [EBP+8],3
	MOV DWORD PTR [EBP-0xC],EDI
	JL _project_004055F8
	MOV ESI,EAX
	PUSH 2
	SHL ESI,2
	LEA ECX,DWORD PTR [EBP-0x18]
	POP EDX
	SUB ECX,ESI

_project_00405635:
	CMP EDX,EAX
	JL _project_00405641
	MOV ESI,DWORD PTR [ECX]
	MOV DWORD PTR [EBP+EDX*4-0x20],ESI
	JMP _project_00405646

_project_00405641:
	AND DWORD PTR [EBP+EDX*4-0x20],0

_project_00405646:
	DEC EDX
	SUB ECX,4
	TEST EDX,EDX
	JGE _project_00405635
	XOR EAX,EAX

_project_00405650:
	POP ESI

_project_00405651:
	PUSH 0x1F
	POP ECX
	SUB ECX,DWORD PTR [dwFunc2Values+0xC] // USING A VARIABLE HERE
	SHL EBX,CL
	MOV ECX,DWORD PTR [EBP-0x14]
	NEG ECX
	SBB ECX,ECX
	AND ECX,0x80000000
	OR EBX,ECX
	MOV ECX,DWORD PTR [dwFunc2Values+0x10] // USING A VARIABLE HERE
	OR EBX,DWORD PTR [EBP-0x20]
	CMP ECX,0x40
	JNZ _project_00405686
	MOV ECX,DWORD PTR [EBP+0xC]
	MOV EDX,DWORD PTR [EBP-0x1C]
	MOV DWORD PTR [ECX+4],EBX
	MOV DWORD PTR [ECX],EDX
	JMP _project_00405690

_project_00405686:
	CMP ECX,0x20
	JNZ _project_00405690
	MOV ECX,DWORD PTR [EBP+0xC]
	MOV DWORD PTR [ECX],EBX

_project_00405690:
	POP EDI
	POP EBX
	LEAVE
	RETN
	}
}
